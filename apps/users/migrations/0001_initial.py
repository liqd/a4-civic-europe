# Generated by Django 2.2.7 on 2020-01-08 16:27

import adhocracy4.images.fields
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 60 characters or fewer. Letters, digits, spaces and @/./+/-/_ only.', max_length=75, unique=True, validators=[django.core.validators.RegexValidator('^[\\w]+[ \\w.@+\\-]*$', 'Enter a valid username. This value may contain only letters, digits, spaces and @/./+/-/_ characters. It must start with a digit or a letter.', 'invalid')], verbose_name='username')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email address already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('_avatar', adhocracy4.images.fields.ConfiguredImageField('avatar', blank=True, help_text='Please upload a squared image, at least 340x340 px. Allowed formats are jpg, gif and png.', upload_to='users/images', verbose_name='Profile picture')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('europe', models.TextField(blank=True, help_text='Why do you care about Europe? Where do you try to make a change? (max. 200 characters)', max_length=200, verbose_name='Your interest in Europe')),
                ('twitter_handle', models.CharField(blank=True, max_length=15, verbose_name='Twitter name')),
                ('facebook_handle', models.CharField(blank=True, max_length=50, verbose_name='Facebook name')),
                ('instagram_handle', models.CharField(blank=True, max_length=30, verbose_name='Instagram name')),
                ('website', models.URLField(blank=True, help_text='Plase add either https:// or http:// to the front of your URL.', verbose_name='Website')),
                ('get_notifications', models.BooleanField(default=True, verbose_name="my own ideas and ideas that I'm watching")),
                ('get_newsletters', models.BooleanField(default=False, verbose_name='Send me Civic Europe news.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
